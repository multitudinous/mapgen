#include "font.h"
#include "utlstring.h"
#include "utlqt.h"

//============================================================================
//============================================================================
Font::Font() :
_name(""),
_face("arial"),
_size(12),
_szFormat(Points),
_color(0,0,0)
{
}

//============================================================================
//============================================================================
Font::Font(const char *face, int size, const QColor &c, SizeFormat szfrmt, const char *name) :
_name(name),
_face(face),
_size(size),
_szFormat(szfrmt),
_color(c)
{

}

//============================================================================
//============================================================================
std::string Font::name() const
{
	return _name;
}

//============================================================================
//============================================================================
void Font::name(const char *name)
{
	_name = name;
}

//============================================================================
//============================================================================
void Font::name(const std::string &name)
{
	_name = name;
}

//============================================================================
//============================================================================
std::string Font::face() const
{
	return _face;
}

//============================================================================
//============================================================================
void Font::face(const char *fontface)
{
	_face = fontface;
}

//============================================================================
//============================================================================
void Font::face(const std::string &fontface)
{
	_face = fontface;
}

//============================================================================
//============================================================================
int Font::size() const
{
	return _size;
}

//============================================================================
//============================================================================
void Font::size(int sz, SizeFormat format)
{
	_size = sz;
	sizeFormat(format);
}

//============================================================================
// this will check for the format pt, or px
//============================================================================
int Font::size(const std::string &sz)
{
	Font::SizeFormat fmt = Points;
	if (sz.find("px") != std::string::npos)
	{
		fmt = Pixels;
	}

	std::string strsz = UtlString::trim(sz);
	std::string strnum;
	for (size_t i = 0; i < sz.size(); i++)
	{
		char c = strsz.at(i);
		if (UtlString::isNumeric(c))
		{
			strnum.push_back(c);
		}
		else if (strnum.size() > 0)
		{
			break;
		}
	}

	_size = atoi(strnum.c_str());
	sizeFormat(fmt);

	return _size;
}

//============================================================================
//============================================================================
int Font::getPixelSize() const
{
	if (sizeFormat() == Pixels) return _size;

	int sizep = UtlQt::computeFontPixelSize(size());
	return sizep;
}

//============================================================================
//============================================================================
Font::SizeFormat Font::sizeFormat() const
{
	return _szFormat;
}

//============================================================================
//============================================================================
void Font::sizeFormat(SizeFormat format)
{
	_szFormat = format;
}

//============================================================================
//============================================================================
QColor Font::color() const
{
	return _color;
}

//============================================================================
//============================================================================
void Font::color(const QColor &c)
{
	_color = c;
}