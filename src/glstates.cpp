#include "glstates.h"

//============================================================================
//============================================================================
GlStates::GlStates()
{
}

//============================================================================
//============================================================================
GlStates::~GlStates()
{
    popAll();
}

//============================================================================
//============================================================================
void GlStates::push(GLenum state, GLboolean enable)
{
    GLboolean stateCur = glIsEnabled(state);
    State s(state, stateCur, stateCur != enable);
    _states.push_front(s);

    if (!s.set) return;
    
    set(s.type, enable);
}

//============================================================================
//============================================================================
void GlStates::pop()
{
    State s = _states.front();
    _states.pop_front();

    if (!s.set) return;
    
    set(s.type, s.enabledPrev);
}

//============================================================================
//============================================================================
void GlStates::popAll()
{
    while (_states.size() > 0)
    {
        pop();
    }
}

//============================================================================
//============================================================================
void GlStates::set(GLenum state, GLboolean enable)
{
    if (enable)
    {
        glEnable(state);
    }
    else
    {
        glDisable(state);
    }
}